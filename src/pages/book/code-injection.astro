---
import { STORE, buildBookPricing } from '~/config.mjs';

import { getCanonical, getHomePermalink } from '~/utils/permalinks';
import Layout from '~/layouts/BooksLayout.astro';
import Hero from '~/components/widgets/CodeInjection/BooksHero.astro';
import Pricing1Column from '~/components/widgets/CodeInjection/Pricing1Column.astro';
import BookFeatures from '~/components/widgets/CodeInjection/BookFeatures.astro';
import BookAuthor from '~/components/widgets/CodeInjection/BookAuthor.astro';
import ScaleUpSecurity from '~/components/widgets/CodeInjection/ScaleUpSecurity.astro';
import FAQ from '~/components/widgets/CodeInjection/FAQ.astro';
import Stats from '~/components/widgets/CodeInjection/Stats.astro';
import CallToAction from '~/components/widgets/CodeInjection/CallToAction.astro';
import TestimonialHeroBlock from '~/components/widgets/CodeInjection/TestimonialHeroBlock.astro';
import TestimonialCollection from '~/components/widgets/TestimonialCollection.astro';
import BookSampleCTA from '~/components/widgets/CodeInjection/BookSampleCTA.astro';
import PagesGallery from '~/components/widgets/CodeInjection/PagesGallery.astro';
import BookModules from '~/components/widgets/CodeInjection/BookModules.astro';
import TopRated from '~/components/atoms/TopRated.astro';

import ogImage from '~/assets/images/code-injection-book-og-v1.png';

const meta = {
	title: 'Node.js Secure Coding: Mitigate and Weaponize Code Injection Vulnerabilities',
	description: `Learn Node.js security and secure coding best practices to prevent code injection vulnerabilities.`,
	canonical: getCanonical(getHomePermalink()),
	image: ogImage,
};

// @TBD - during pre-order we use the discount A0MZIZMQ for this book
const discountCode = Astro.url.searchParams.get('discount_code') || 'U5NZI3MW';
const bundlePricing = buildBookPricing({discountCode: '', bookId: 'bundle'});
const bookPricing = buildBookPricing({discountCode, bookId: 'CodeInjection'});

// This page route is rendered on-demand on the server
export const prerender = false
---

<Layout {meta}>
	<Hero
		title="Node.js Secure Coding:"
		subtitle="Mitigate and Weaponize Code Injection Vulnerabilities"

		bundlePricing={bundlePricing}
		bookPricing={bookPricing}
	/>

	<div class="flex flex-col justify-center text-center mt-24 md:mb-44">
		<!-- <p class="block mt-4">
			You heard <code class="text-blue-500"> eval()</code>
			and <code class="text-blue-500">new Function()</code> are 
			dangerous but have you seen them in action for real-world use cases?
		</p>
		<p class="block mt-4">
			Do you know why Node.js <code class="text-blue-500">vm module</code> is dangerous?
			Do you know how to exploit <code class="text-blue-500">require</code> 
			 and <code class="text-blue-500">import</code> as security sinks?
		</p> -->
		
		<p class="block mt-4">
			<span class="font-semibold underline decoration-blue-500 decoration-2 underline-offset-4">Get trained on secure coding techniques</span> that are hacker-proof and 
			build unbreakable Node.js and Server-side JavaScript apps.
		</p>

		<div class="mt-4 self-center text-center justify-center flex">
			<TopRated />
		</div>
	</div>
	
	<!-- TODO doesn't exist yet -->
	<!-- <PagesGallery /> -->

	<!-- <Stats /> -->

	<TestimonialCollection />

	<!-- <BookModules /> -->

	<!-- <ScaleUpSecurity /> -->

	<BookAuthor />
	

	<!-- <BookFeatures /> -->

	<!-- <Pricing1Column
		priceBeforeDiscount={bookPricing.priceBeforeDiscount}
		priceAfterDiscount={bookPricing.priceAfterDiscount}
		linkBuy={bookPricing.linkBuy}
	/> -->

	<!-- <BookSampleCTA /> -->

	<!-- <Steps /> -->
	<!-- <Features3 /> -->
	<!-- <Features /> -->

	

	<TestimonialHeroBlock />

	<FAQ />
	
	<CallToAction
		priceBeforeDiscount={bookPricing.priceBeforeDiscount}
		priceAfterDiscount={bookPricing.priceAfterDiscount}
		linkBuy={bookPricing.linkBuy}
	/>
</Layout>
