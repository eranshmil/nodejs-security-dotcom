---
import { SEO } from 'astro-seo';
import { SITE, PROFILE } from '~/config.mjs';
import Fonts from '../atoms/Fonts.astro';
import ExtraMetaTags from '../atoms/ExtraMetaTags.astro';
import WebAnalytics from './WebAnalytics.astro';

import defaultImageFile from '~/assets/images/whatsapp-compat-nodejs-secure-coding-website-og-lightmode.png';

const {
	post,
	title = SITE.name,
	description = '',

	canonical,
	noindex = false,
	nofollow = false,

	ogTitle = title,
	ogType = 'website',
} = Astro.props;

let { image } = Astro.props;
let { ogImage } = Astro.props;

image = image || defaultImageFile;

const siteBaseURL = new URL(Astro.url);
let ogImageURL = '';
let ogImageProperites = {
	height: 630,
	width: 1200,
	format: 'png',
};

if (ogImage) {
	ogImageURL = new URL(ogImage, siteBaseURL).href;
} else {
	if (typeof image === 'string') {
		ogImageURL = new URL(image, siteBaseURL).href;
	} else{
		ogImageProperites = {
			height: image.height,
			width: image.width,
			format: image.format,
		};
		if (image && typeof image['href'] !== 'undefined') {
			ogImageURL = new URL(image['href'], siteBaseURL).href;
		} else {
			ogImageURL = new URL(image.src, siteBaseURL).href;
		}
	}
}

let articleMetaTags = []

if (post && post.tags) {

	articleMetaTags = articleMetaTags.concat(post.tags.map((tag) => ({
		name: 'article:tag',
		content: tag,
	})))
}

if (post && post.pubDate) {

	articleMetaTags = articleMetaTags.concat([
		{
			name: 'twitter:label1',
			content: 'Written by',
		},
		{
			name: 'twitter:data1',
			content: SITE.author,
		},
		{
			name: 'twitter:label2',
			content: 'Est. reading time',
		},
		{
			name: 'twitter:data2',
			content: `${post.readingTime}`,
		},
		{
			name: 'article:published_time',
			content: post.pubDate,
		},
		{
			name: 'article:author',
			content: PROFILE.twitterURL,
		},
	]);

}
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<SEO
	title={title}
	description={description}
	canonical={canonical}
	noindex={noindex}
	nofollow={nofollow}
	openGraph={{
		basic: {
			url: canonical,
			title: ogTitle,
			type: ogType,
			image: ogImageURL,
		},
		image: {
			url: ogImageURL,
			secureUrl: ogImageURL,
			alt: ogTitle,
			height: ogImageProperites?.height,
			width: ogImageProperites?.width,
			type: ogImageProperites?.format && `image/${ogImageProperites.format}`,
		},
	}}
	twitter={{
		creator: '@liran_tal',
		image: ogImageURL ? ogImageURL.toString() : undefined,
		imageAlt: ogTitle,
		title: ogTitle,
		site: '@liran_tal',
		description: description,
		card: ogImageURL ? 'summary_large_image' : 'summary',
	}}
	extend={{
		meta: [
			{
				name: 'og:locale',
				content: 'en_US',
			},
			{
				name: 'og:description',
				content: description,
			},
			{
				name: 'og:site_name',
				content: SITE.name,
			},
			...articleMetaTags,
		]
	}}
/>

<Fonts />

<ExtraMetaTags />

<WebAnalytics />
